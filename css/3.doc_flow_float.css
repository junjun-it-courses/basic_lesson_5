/*
    Для того чтобы чтобы управлять потоком нашего документа с помощью CSS нам в первую
    очередь нужно выстроить правильный базовый поток документа в нашем HTML.

    float

    Задача:
    Необходимо выставить элементы .item друг возле друга по 4 в ряд.


    Решение:

    Для начала выставим ширину элемента 50% и добавим float: left чтобы
    элементы .item могли обтекать друг друга с левой стороны.
*/

.item {
    width: 25%;
    float: left;
}

/*
    Видим что такой способ достаточно хорош и все сразу стало как нам было нужно.
    Но есть проблема, если мы проинспектируем родительский элемент (.wrapper)
    наших .item блоков, то сразу увидим нечто странное, а именно то что
    высота  этого элемента равна 0, как будто в нем нет никаких дочерних элементов,
    хотя они есть.

    Для того чтобы решить эту проблему нам нужно растянуть .wrapper чтобы он занимал
    именно столько высоты сколько нужно.

    Обычно для этого используются псевдо-элементы, он них мы будем говорить позднее, но
    используем их для того чтобы решить нашу проблему.
*/


/*
    Вкратце, псевдо-элемент, это такой элемент который создается не через HTML, но через
    CSS, а браузер интерпретирует его как часть структуры сайта.
*/

/*.wrapper:after {*/
/*    content: '';*/
/*    display: block;*/
/*    clear: both;*/
/*}*/

/*
    Теперь все отображается правильно, вся суть в том что мы создаем еще один,
    полностью пустой, элемент и отменяем для него float , с помощью свойства clear: both.
    После чего этот, пустой, элемент располагается в самом конце нашего блока .wrapper
    и тем самым растягивает его высоту, и делает ее правильной.

    Такое использование будет не слишком удобным, если у нам будет много элементов
    позиционированных через float, в таком случае на проще сделать отдельный класс
    который будет добавлять такие стили нужным для нас элементам. Обычно такой класс
    называется .clearfix.
*/


.clearfix:after {
    content: '';
    display: block;
    clear: both;
}

/*
    И добавим его для нашего блока wrapper, единственное что нам нужно делать,
    это добавлять класс .clearfix, для родительских элементов дети которых позиционированы
    с помощью свойств float.

    Этот способ активно использовался раньше, но уже не так актуален и практически не
    используется в данный момент, но такой подход все еще можно встретить в реально жизни.
*/